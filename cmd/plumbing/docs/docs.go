// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/category": {
            "get": {
                "description": "Returns a list of categories for a specified language code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "categories"
                ],
                "summary": "Retrieve categories by language code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing language code",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Language code not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection": {
            "get": {
                "description": "Returns details of a specific collection in the specified language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Retrieve a collection by ID and language code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "collection_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection details",
                        "schema": {
                            "$ref": "#/definitions/models.CollectionResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collections": {
            "get": {
                "description": "Returns a list of collections in the specified language for a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "collections"
                ],
                "summary": "Retrieve collections by category ID and language code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of collections",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.CollectionResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing language code",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Failed to get collections",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/item": {
            "get": {
                "description": "Returns details of a specific item in the specified language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Retrieve an item by ID and language code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item details",
                        "schema": {
                            "$ref": "#/definitions/models.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "description": "Returns a list of items in the specified language for a category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Retrieve items by category ID and language code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ItemResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/items/collection": {
            "get": {
                "description": "Returns a list of items in the specified language for a collection",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Retrieve items by collection ID and language code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collection ID",
                        "name": "collection_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ItemResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Collection not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "description": "Returns a list of all available languages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "languages"
                ],
                "summary": "Retrieve all languages",
                "responses": {
                    "200": {
                        "description": "List of languages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Language"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/new": {
            "get": {
                "description": "Returns a list of new collections and items for the specified language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "new"
                ],
                "summary": "Retrieve new collections and items by language",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of new collections and items",
                        "schema": {
                            "$ref": "#/definitions/models.PopularResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid language parameter",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/popular": {
            "get": {
                "description": "Returns a list of popular collections and items for the specified language",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "popular"
                ],
                "summary": "Retrieve popular collections and items by language",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of popular collections and items",
                        "schema": {
                            "$ref": "#/definitions/models.PopularResponse"
                        }
                    },
                    "400": {
                        "description": "Missing or invalid language parameter",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "description": "Performs a search for collections and items based on the provided parameters such as language, producer status, and search query.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search for collections and items based on language, producer status, and search query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Language code",
                        "name": "lang",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by producer status",
                        "name": "is_producer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "q",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "schema": {
                            "$ref": "#/definitions/models.PopularResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/starter": {
            "post": {
                "description": "Starts the service, potentially creating necessary data or performing required tasks.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "starter"
                ],
                "summary": "Initialize the service or perform a start-up operation",
                "responses": {
                    "200": {
                        "description": "Successfully created",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "400": {
                        "description": "already exists",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.CollectionResponse": {
            "type": "object",
            "properties": {
                "colors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ColorResponse"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPainted": {
                    "type": "boolean"
                },
                "isProducer": {
                    "type": "boolean"
                },
                "is_new": {
                    "type": "boolean"
                },
                "is_popular": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PhotosResponse"
                    }
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.ColorResponse": {
            "type": "object",
            "properties": {
                "hash_color": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.ItemResponse": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "collection_id": {
                    "type": "integer"
                },
                "colors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ColorResponse"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isPainted": {
                    "type": "boolean"
                },
                "isProducer": {
                    "type": "boolean"
                },
                "is_new": {
                    "type": "boolean"
                },
                "is_popular": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PhotosResponse"
                    }
                },
                "price": {
                    "type": "number"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "models.Language": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.PhotosResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isMain": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.PopularResponse": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CollectionResponse"
                    }
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ItemResponse"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Swagger Plumbing API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
